<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.daralisdan.dao.DepartMapper">

	<!-- public Department getDeptById(Integer id); -->
	<select id="getDeptById"
		resultType="com.daralisdan.bean.Department">
		SELECT id,dept_Name FROM tbl_dept WHERE id=#{id}
	</select>

<!-- collection嵌套结果集的方式，定义关联的集合类型元素的封装规则 -->

	<!-- javaBean：public class Department {
	  private Integer id;
	  private String deptName;
	
	  // 一个部门下的所有员工
	  private List<Employee> emps; 
	  
	  public class Employee {
		  private Integer id;
		  private String lastName;
		  private String gender;
		  private String email;
		  
  //一个部门对应一个员工
  private Department dept;
	  
	数据库：   did  dept_name || eid  last_name  gender  email   
	  -->


	<!-- // 查询部门的时候，将部门对应的所有员工信息也查询出来
	 public Department getDeptByIdPlus(Integer id); -->

<!--  collection嵌套结果集的方式 ,使用该标签定义关联的集合类型的属性封装规则-->
	<resultMap type="com.daralisdan.bean.Department" id="Mydept">
		<id column="did" property="id" />
		<result column="dept_name" property="deptName" />

		<!-- collection: 定义关联集合类型的属性的封装规则
		ofType：指定集合里面元素的类型
		-->
		<collection property="emps"
			ofType="com.daralisdan.bean.Employee">
			<id column="eid" property="id" />
			<result column="last_name" property="lastName" />
			<result column="gender" property="gender" />
			<result column="email" property="email" />
		</collection>
	</resultMap>

	<select id="getDeptByIdPlus" resultMap="Mydept">
		SELECT d.id
		did,d.dept_name dept_name,
		e.id eid,e.last_name last_name,e.gender
		gender,e.email email
		FROM tbl_dept d
		LEFT JOIN tbl_employee e
		ON
		d.id=e.d_id
		WHERE d.id=1
	</select>
	
	
	<!-- collection 分步查询 -->
	<!-- // collection 分步查询 查询部门的时候，将部门对应的所有员工信息也查询出来
  public Department getDeptByIdStep(Integer id);
	 -->
	<resultMap type="com.daralisdan.bean.Department"
	id="MyDeptStep">
	<id column="id" property="id" />
	<result column="dept_name" property="deptName" />
	<!-- column="id":是查询部门的id,传递给查询员工的方法 -->
	<collection property="emps"
	select="com.daralisdan.dao.EmployeeMapperPlus.getEmpByDeptId"
	column="id" fetchType="lazy">
</collection>
</resultMap>
	<select id="getDeptByIdStep" resultMap="MyDeptStep">
		SELECT id,dept_Name FROM
		tbl_dept WHERE id=#{id}
	</select>
	
	<!-- 扩展：多列的值传递过去
	 	将多列的值封装map传递过去
	 可以这样:	column="{key1=column1,key2=column2}" 例：<collection property="emps"
	select="com.daralisdan.dao.EmployeeMapperPlus.getEmpByDeptId"
	column="id"> column可以写成 column="{deptId=id}",deptId是查询员工方法中需要传递的参数
	 
	 fetchType="lazy"：表示使用延迟加载
			  - lazy 延迟
			  - eager 立即
	 -->
	
	
</mapper>